name: smartnic_322mhz
info: |
  smartnic_322mhz is the top level module for the 322+ MHz
  packet processing platform.

regs:
  - default:
      width  : 32
      access : ro
      init   : 0

  - name: status
    init: 0xC0BEBEEF

  - name: hdr_length
    desc: configures header slice size (in bytes) for split-join logic.  set to 0 to disable split-join logic.
    access: rw
    init: 0x0

  # ----- switch configuration registers. -----
  - name: igr_sw_tid
    access : rw
    count: 4
    fields:
        - name: value
          desc: sets the axi4s 'tid' (src port) signal for the specified ingress port.
                indexed by port number (0:CMAC_0, 1:CMAC_1, 2:HOST_0, 3:HOST_1).
                igr_sw_tid[0]=1 sets 'tid' from CMAC_0 to CMAC_1.
          width: 2
          init: 0
          enum_hex:
              0 : CMAC_0
              1 : CMAC_1
              2 : HOST_0
              3 : HOST_1

  - name: igr_sw_tdest
    access : rw
    count: 4
    fields:
        - name: value
          desc: sets the axi4s 'tdest' signal (ingress switch output port) for the specified ingress port.
                indexed by port number (0:CMAC_0, 1:CMAC_1, 2:HOST_0, 3:HOST_1).
                igr_sw_dest[0]=1 sends pkts from CMAC_0 to APP_1.
          width: 2
          init: 3
          enum_hex:
              0 : APP_0
              1 : APP_1
              2 : APP_BYPASS
              3 : DROP

  - name: bypass_tdest
    access : rw
    count: 4
    fields:
        - name: value
          desc: sets the bypass axi4s 'tdest' signal (egress switch output port) for the specified ingress port.
                indexed by port number (0:CMAC_0, 1:CMAC_1, 2:HOST_0, 3:HOST_1).
                bypass_tdest[0]=1 sends pkts from CMAC_0 to CMAC_1.
          width: 2
          init: 0
          enum_hex:
              0 : CMAC_0
              1 : CMAC_1
              2 : HOST_0
              3 : HOST_1

  - name: switch_config
    access: rw
    fields:
      - name: igr_sw_tpause
        desc: set to 1 to assert axi4s backpressure to the ingress switch (test register).
        width: 1
        init : 0
      - name: axis_to_host_0_tpause
        desc: set to 1 to assert axi4s backpressure to the host_0 egress FIFO (test register).
        width: 1
        init : 0
      - name: axis_to_host_1_tpause
        desc: set to 1 to assert axi4s backpressure to the host_1 egress FIFO (test register).
        width: 1
        init : 0
      - name: drop_pkt_loop
        desc: set to 1 to enable dropping egress packets that have axi4s tdest==tid (egress_port==ingress_port).
              enables drop logic on 'APP_0' and 'APP_BYPASS'.  drops on 'APP_1' to be implemented in future.
        width: 1
        init : 0

  - name: app_0_tdest_remap
    access : rw
    count: 4
    fields:
        - name: value
          desc: remaps APP_0 axi4s 'tdest' signal (egress switch output port) for pkts directed to specified egress port.
                indexed by port number (0:CMAC_0, 1:CMAC_1, 2:HOST_0, 3:HOST_1).
                app_0_tdest_remap[0]=1 remaps CMAC_0 to CMAC_1.
          width: 3
          init: 0
          enum_hex:
              0 : CMAC_0
              1 : CMAC_1
              2 : HOST_0
              3 : HOST_1
          count: 4

  - name: app_1_tdest_remap
    access : rw
    count: 4
    fields:
        - name: value
          desc: remaps APP_1 axi4s 'tdest' signal (egress switch output port) for pkts directed to specified egress port.
                indexed by port number (0:CMAC_0, 1:CMAC_1, 2:HOST_0, 3:HOST_1).
                app_1_tdest_remap[0]=1 remaps CMAC_0 to CMAC_1.
          width: 3
          init: 0
          enum_hex:
              0 : CMAC_0
              1 : CMAC_1
              2 : HOST_0
              3 : HOST_1
          count: 4

  - name: egr_fc_thresh
    desc: egress flow control threshold registers.  one per egress FIFO.
          indexed by port number (0:CMAC_0, 1:CMAC_1, 2:HOST_0, 3:HOST_1).
          flow control is asserted when FIFO fill level exceeds threshold value.
          threshold is specified in units of 64B words.  egress FIFOs can hold 1020x64B.
    access : rw
    count  : 4
    init   : 0xffff_ffff

  # ----- Timestamp configuration and monitoring registers. -----
  - name: timestamp_incr
    desc   : Timestamp increment register.  Added to timestamp counter on each 343.75MHz core_clk tick.
             32-bit value with a 4-bit integer component and a 28-bit fractional component.
             0x2_E8BA2E9 represents 2.90909091 ns.
    width  : 32
    access : rw
    init   : 0x2_E8BA2E9
     
  - name: timestamp_wr_upper
    desc   : Timestamp write data (upper word).
    access : rw

  - name: timestamp_wr_lower
    desc   : Timestamp write data (lower word).
             Full 64-bit value is loaded atomically into timestamp counter when lower word write event occurs.
    access : wr_evt

  - name: timestamp_rd_upper
    desc   : Timestamp read latch data (upper word).
    access : ro

  - name: timestamp_rd_lower
    desc   : Timestamp read latch data (lower word).
    access : ro
     
  - name: freerun_rd_upper
    desc   : Timestamp read latch data (upper word).
    access : ro

  - name: freerun_rd_lower
    desc   : Timestamp read latch data (lower word).
    access : ro

  - name: timestamp_rd_latch
    desc   : Timestamp read latch trigger.
             Full 64-bit timestamp is loaded atomically into timestamp latch when rd_latch write event occurs.
    width  : 8
    access : wr_evt
